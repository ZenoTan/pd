package errors

import "github.com/pingcap/errors"

var (
	reg            = errors.NewRegistry("PD")
	ClassIO  = reg.RegisterErrorClass(1, "io")
	ClassNetwork        = reg.RegisterErrorClass(2, "network")
	ClassStorage = reg.RegisterErrorClass(3, "storage")
	ClassInternal    = reg.RegisterErrorClass(4, "internal")
	ClassFormat    = reg.RegisterErrorClass(5, "format")
	ClassOther     = reg.RegisterErrorClass(6, "other")
)

var (
	ErrIOJoinConfig = ClassIO.DefineError().TextualCode("ErrIOJoinConfig").MessageTemplate("config io error during join").Done()
	ErrHttpContentConfig = ClassIO.DefineError().TextualCode("ErrIOHTTPContent").MessageTemplate("http content io error").Done()
	ErrHTTPErrorResponse = ClassNetwork.DefineError().TextualCode("ErrHTTPErrorResponse").MessageTemplate("make http error response fail").Done()
	ErrHTTPRedirect = ClassNetwork.DefineError().TextualCode("ErrHTTPRedirect").MessageTemplate("http redirect many times").Done()
	ErrHTTPRequestURL = ClassNetwork.DefineError().TextualCode("ErrHTTPRequestURL").MessageTemplate("wrong url in user http request").Done()
	ErrGRPCTso = ClassNetwork.DefineError().TextualCode("ErrGRPCTso").MessageTemplate("grpc tso request fail").Done()
	ErrGRPCHeartbeat = ClassNetwork.DefineError().TextualCode("ErrGRPCHeartbeat").MessageTemplate("grpc heartbeat request fail").Done()
	ErrGRPCClose = ClassNetwork.DefineError().TextualCode("ErrGRPCClose").MessageTemplate("grpc close connection fail").Done()
	ErrGRPCSend = ClassNetwork.DefineError().TextualCode("ErrGRPCSend").MessageTemplate("grpc send message fail").Done()
	ErrStorageLoad = ClassStorage.DefineError().TextualCode("ErrStorageLoad").MessageTemplate("load config from storage error").Done()
	ErrStorageSave = ClassStorage.DefineError().TextualCode("ErrStorageSave").MessageTemplate("save config to storage error").Done()
	ErrStorageDelete = ClassStorage.DefineError().TextualCode("ErrStorageDelete").MessageTemplate("delete config from storage error").Done()
	ErrStorageEtcdLoad = ClassStorage.DefineError().TextualCode("ErrStorageEtcdLoad").MessageTemplate("load config from storage etcd error").Done()
	ErrStorageEtcdSave = ClassStorage.DefineError().TextualCode("ErrStorageEtcdSave").MessageTemplate("save config to storage etcd error").Done()
	ErrStorageEtcdDelete = ClassStorage.DefineError().TextualCode("ErrStorageEtcdDelete").MessageTemplate("delete config from storage etcd error").Done()
	InternalSchedulerDuplicate = ClassInternal.DefineError().TextualCode("InternalSchedulerDuplicate").MessageTemplate("duplicate scheduler found").Done()
	InternalSchedulerNotFound = ClassInternal.DefineError().TextualCode("InternalSchedulerNotFound").MessageTemplate("scheduler not found").Done()
	ErrInternalSchedulerConfig = ClassInternal.DefineError().TextualCode("ErrInternalSchedulerConfig").MessageTemplate("wrong scheduler config").Done()
	InternalRuleInvalid = ClassInternal.DefineError().TextualCode("InternalRuleInvalid").MessageTemplate("invalid rule found").Done()
	InternalRuleDuplicate = ClassInternal.DefineError().TextualCode("InternalRuleDuplicate").MessageTemplate("duplicate rule found").Done()
	InternalRuleMismatch = ClassInternal.DefineError().TextualCode("InternalRuleMismatch").MessageTemplate("rule key mismatch").Done()
	InternalOperatorNotFound = ClassInternal.DefineError().TextualCode("InternalOperatorNotFound").MessageTemplate("operator not found").Done()
	InternalOperatorOrphan = ClassInternal.DefineError().TextualCode("InternalOperatorOrphan").MessageTemplate("operator is orphan").Done()
	ErrInternalOperatorMerge = ClassInternal.DefineError().TextualCode("ErrInternalOperatorMerge").MessageTemplate("operator cannot merge").Done()
	InternalOperatorNotStart = ClassInternal.DefineError().TextualCode("InternalOperatorNotStart").MessageTemplate("operator not start").Done()
	InternalOperatorNotEnd = ClassInternal.DefineError().TextualCode("InternalOperatorNotEnd").MessageTemplate("operator not end").Done()
	InternalOperatorStepUnknown = ClassInternal.DefineError().TextualCode("InternalStepUnknown").MessageTemplate("operator step is unknown").Done()
	InternalStoreNotFound = ClassInternal.DefineError().TextualCode("InternalStoreNotFound").MessageTemplate("store id %d not found").Done()
	ErrInternalClusterVersionChange = ClassInternal.DefineError().TextualCode("InternalClusterVersionChange").MessageTemplate("cluster version change same time").Done()
	ErrInternalRegionKey = ClassInternal.DefineError().TextualCode("ErrInternalRegionKey").MessageTemplate("wrong region key range").Done()
	InternalCacheRegionOverflow = ClassInternal.DefineError().TextualCode("InternalCacheRegionOverflow").MessageTemplate("cache region overflow").Done()
	InternalVersionFeatureNotExist = ClassInternal.DefineError().TextualCode("InternalVersionFeatureNotExist").MessageTemplate("version feature not exist").Done()
	ErrFormatParseCmd = ClassFormat.DefineError().TextualCode("ErrFormatParseCmd").MessageTemplate("parse cmd error").Done()
	ErrFormatParseClusterVersion = ClassFormat.DefineError().TextualCode("ErrFormatParseClusterVersion").MessageTemplate("parse cluster version error").Done()
	ErrFormatParseURL = ClassFormat.DefineError().TextualCode("ErrFormatParseURL").MessageTemplate("parse url error").Done()
	ErrFormatParseHistoryIndex = ClassFormat.DefineError().TextualCode("ErrFormatParseHistoryIndex").MessageTemplate("parse history index error").Done()
	ErrOtherInitLog = ClassOther.DefineError().TextualCode("ErrOtherInitLog").MessageTemplate("init log fail").Done()
	ErrOtherDashboardServer = ClassOther.DefineError().TextualCode("ErrOtherDashboardServer").MessageTemplate("dashboard server error").Done()
	ErrOtherPrometheusPush = ClassOther.DefineError().TextualCode("ErrOtherPrometheusPush").MessageTemplate("push to prometheus error").Done()
	OtherPluginLoadActionUnknown = ClassOther.DefineError().TextualCode("OtherPluginLoadActionUnknown").MessageTemplate("unknown action to load plugin").Done()
	OtherPluginFuncNotFound = ClassOther.DefineError().TextualCode("OtherPluginFuncNotFound").MessageTemplate("plugin function not found").Done()
	ErrOtherSystemTime = ClassOther.DefineError().TextualCode("ErrOtherSystemTime").MessageTemplate("system time error").Done()
)